---
description: 
globs: 
alwaysApply: true
---
# 📘 Project: HubSpot Contact Viewer Dashboard

## 🧱 Tech Stack

- **Frontend**: React with **Vite.js**, **TypeScript**, and **TanStack Query (React Query)**
- **Backend**: Node.js with **Express** and **TypeScript**
- **Styling**: Tailwind CSS (optional)
- **External API**: HubSpot CRM API (via Private App Token)

---

## 🎯 Goal

Build a simple full-stack dashboard where I can:

1. Fetch contacts from my HubSpot CRM (using their REST API)
2. Display those contacts in a user-friendly interface
3. Allow optional filtering by name or email

---

## 🔑 Authentication

- I already have a HubSpot **Private App Token**.
- This token must be stored securely on the **backend only** (`.env`).
- The frontend will call the backend, which will act as a **proxy** for HubSpot requests.

---

## 📦 Backend (`/server`)

Use **Express + TypeScript**

### Responsibilities:

- Set up a `.env` file:
  ```
  HUBSPOT_PRIVATE_TOKEN=pat-eu1-c3a51a5d-5c27-4d6f-99f5-4e6da9437eb0
  ```

- Create one route:
  ```
  GET /api/contacts
  ```
  - Fetch data from:
    ```
    https://api.hubapi.com/crm/v3/objects/contacts
    ```
  - Send `Authorization: Bearer <token>` header
  - Return simplified contact data: `id`, `firstname`, `lastname`, `email`

- Use `dotenv` for environment variables
- Enable CORS

---

## 🎨 Frontend (`/client`)

Use **Vite.js + React + TypeScript + TanStack Query**

### Responsibilities:

- Set up React Query client with `QueryClientProvider`
- Create a `useContacts` hook that calls `/api/contacts` using `useQuery`
- Display list of contacts (e.g., in cards or a table)
- Show:
  - First name
  - Last name
  - Email address

### UI Features:

- Show loading indicator while fetching
- Handle error state if fetch fails
- Optional: Search/filter input that filters displayed list (client-side for now)
- Optional: Refetch button

---

## 📁 Project Structure

```
/hubspot-dashboard/
  /client/     → Vite React App (TypeScript + TanStack Query)
  /server/     → Express API (TypeScript)
  .env         → Private token (in root or /server)
  README.md
```

---

## 🧪 How to Run

- Start backend on port `3001`
- Start frontend on port `3000`
- Frontend should fetch from `/api/contacts` and display the list

---

## ✨ Optional Enhancements

- Contact detail modal
- Paginate contacts using HubSpot's `after` cursor
- Add form to create a new contact (`POST /crm/v3/objects/contacts`)
- Display company name for each contact (using association API)
- Add loading skeletons for better UX

---

## 📘 HubSpot API Docs

- [HubSpot CRM API – Contacts](mdc:https:/developers.hubspot.com/docs/api/crm/contacts)

---

## 📦 Packages to Install

### Frontend:

```bash
npm install @tanstack/react-query axios
```

### Backend:

```bash
npm install express cors dotenv axios
npm install --save-dev typescript @types/node @types/express ts-node
```
